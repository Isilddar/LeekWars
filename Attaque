Cette fonction Détermine  la meilleur case sur laquelle tirer, en fonction du nombre de dégats que l'on fait aux ennemis et
aussi aux alliés. Elle ne tire que si les dégats infligés aux ennemis sont de 200 suppérieurs aux dégats infligé aux alliés.
Elle je l'ai faite pour le lance grenade, mais elle marche pour les armes de CaC et les armes mono-cobles aussi. Elle n'a pas
été faite pour les lasers et lance flamme car je trouvait compliquer d'intégré le "tire sur toute la ligne jusqu'a un obstacle".
Elle renvoit la case sur laquelle tirer, se qu permet ensuite d'utiliser useweapononcell().
Si vous avez des questions ou des remarques, n'hésitez pas à me MP :)

function AttaqueCible() {
/// déclaration des variables
var j=0;
var Allys = getAliveAllies();
var AllysNotSummon = [];
for (var i = 0; i < count(Allys); i++) {
	if (isSummon(Allys[i]) === false and Allys[i] != getLeek()) {
		AllysNotSummon[j] = Allys[i];
		j=j+1;
	}
}
j=0;
var WeaponRange = [];
var Ennemis = getAliveEnemies();
var Arme = getWeapon();
var DamageMap = [];
var weaponStats = getWeaponEffects(Arme);
var weaponDamage = (weaponStats[0][2] + weaponStats[0][1]) / 2;
var MaxDamageCell = null;
/// cellules que l'on peut viser
for (var i = 0; i < 613; i++) {
	if (canUseWeaponOnCell(i) === true) {
		WeaponRange[j]=i;
		j=j+1;
	}
}
var Zone;
/// Réglage de la zone d'effet'
if (getWeaponArea(Arme) === AREA_POINT) {
	Zone = 0;
}
if (getWeaponArea(Arme) === AREA_CIRCLE_1) {
	Zone=1;
}
if (getWeaponArea(Arme) === AREA_CIRCLE_2) {
	Zone=2;
}
if (getWeaponArea(Arme) === AREA_CIRCLE_3) {
	Zone=3;
}
/// On gère le ratio dégat collatéraux
for (var i = 0; i < count(WeaponRange); i++) {
	for (var k = 0; k < count(Ennemis) ; k++) {
		if (getDistance(getCell(Ennemis[k]), WeaponRange[i]) <= Zone) {
				DamageMap[i] = DamageMap[i]+((weaponDamage * (1 + getStrength() / 100) * (1 - getRelativeShield(Ennemis[k]) / 100) - getAbsoluteShield(Ennemis[k]))*(100-(50*getDistance(getCell(Ennemis[k]), WeaponRange[i]))/100)/100);
		}
	}
}
for (var i = 0; i < count(WeaponRange); i++) {
	for (var k = 0; k < count(AllysNotSummon); k++) {
		if (getDistance(getCell(AllysNotSummon[k]), WeaponRange[i]) <= Zone) {
			DamageMap[i] = (DamageMap[i]-((weaponDamage * (1 + getStrength() / 100) * (1 - getRelativeShield(AllysNotSummon[k]) / 100) - getAbsoluteShield(AllysNotSummon[k]))*(100-(50*getDistance(getCell(AllysNotSummon[k]), WeaponRange[i]))/100)/100));
		}
	}
}
/// On trouve la cellule ou l'on fait le plus de ratio dégatsAllié/dégatsEnnemis
if ((arrayMax(DamageMap)) > 200){
MaxDamageCell=WeaponRange[search(DamageMap, arrayMax(DamageMap))];
}
/// On rend la cellule MaxDamage cell
return MaxDamageCell;
}
